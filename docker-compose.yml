version: '3'
volumes:
  data-store:
services:
  db:
    build: ./docker/db
    environment:
      MYSQL_ROOT_PASSWORD: docker
      MYSQL_DATABASE: python_local
      MYSQL_USER: user
      MYSQL_PASSWORD: passwd
      MYSQL_PORT: 3306
      TZ: 'Asia/Tokyo'
    ports:
      - 3306:3306
    volumes:
      - ./data-store/rdb:/var/lib/mysql
  dynamodb-local:
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
    image: "amazon/dynamodb-local:latest"
    container_name: dynamodb-local
    ports:
      - "8000:8000"
    volumes:
      - "./data-store/dynamodb:/home/dynamodb/data"
    working_dir: /home/dynamodb
  nodejs:
    build: ./docker/app
    working_dir: /home/user/dev
    volumes:
      - ./dev:/home/user/dev
    environment:
      TZ: 'Asia/Tokyo'
      AWS_ACCESS_KEY_ID: 'DUMMYIDEXAMPLE'
      AWS_SECRET_ACCESS_KEY: 'DUMMYEXAMPLEKEY'
      REGION: 'ap-northeast-1'
      NODE_ENV: 'development'
    # command:
    #   dynamodb describe-limits --endpoint-url http://dynamodb-local:8000 --region us-west-2
    tty: true
    ports:
      - 80:80
    depends_on:
      - db
      - dynamodb-local
    # links:
    #   - dynamodb-local
  sqs:
    image: roribio16/alpine-sqs
    # image: softwaremill/elasticmq
    # volumes:
    #   - ./sqs/sqs.conf://opt/elasticmq.conf:ro
    environment:
      TZ: 'Asia/Tokyo'
    ports:
      - 9324:9324
  adminer:
    # container_name: adminer
    hostname: adminer
    image: adminer:latest
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - db